Node JS

What?
    Is a javascript runtime environment
    Uses the v8 engine, just transplanted into a commandline application

Differences vs browser
    - no window object / global namespace
    - no document object
    - console.logs GO TO THE TERMINAL, NOT THE BROWSER

    - Based off of a MODULE system since there is no global namespace


Node - REPL
    Read, Evaluate, Print, Loop
    

We can specify arguments to our node files
    we gain access to them in an array at 
    process.argv
    arguments vector (argv)
    
NPM
    Service to manage and download node modules
    NPM is not a Package Manager
    Where you pick the modules you want your own application to use
    
    npm is used to install modules and keep them up to date (or out of date if you so choose)
    
    Setting up NPM for your project
        1. npm init -> create a file called package.json
        2. npm install MODULENAME --save -> installs the module and keeps a record of it in package.json
        
    Package.json 
        -> file that keeps track of WHAT modules you have installed and their VERSION number
        -> can quickly install all dependencies listed in it by running the command npm install
            -> reads through package.json and installs all dependencies
        
        -> common practice is to git ignore the node_modules folder.  Its huge and the package.json can be used to re-download dependencies
            -> add a file called .gitignore
    
    
    
Modules - How can we access them?
    We use the require method
    require('MODULENAME')
    3 Ways
        1. Including core modules (fs, http)
        2. By passing in a filepath (our OWN modules/files)
        3. Including an installed module from npm (request)
        
    Require method is how we IMPORT in modules to a file
    module.exports is how we EXPORT information to other 
    
    angular.module('')
        .factory(function(){
            
            return {
                name : 'Bill'
            }
        })
        
        
        